{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for auth tokens\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      const response = await axios.post('/auth/refresh', {\n        refresh_token: refreshToken\n      });\n      localStorage.setItem('access_token', response.data.access_token);\n      return api(originalRequest);\n    } catch (err) {\n      console.error('Refresh token failed', err);\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login'; // Redirect to login\n    }\n  }\n  return Promise.reject(error);\n});\n\n// HubSpot OAuth endpoints\nexport const hubspotAPI = {\n  getAuthUrl: (user_id, org_id) => api.post('/hubspot/authorize', {\n    user_id,\n    org_id\n  }),\n  exchangeCode: (code, state) => api.get(`/hubspot/callback?code=${code}&state=${state}`),\n  getContacts: () => api.get('/hubspot/contacts')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","originalRequest","status","_retry","refreshToken","post","refresh_token","setItem","data","access_token","err","console","removeItem","window","location","href","Promise","reject","hubspotAPI","getAuthUrl","user_id","org_id","exchangeCode","code","state","get","getContacts"],"sources":["C:/Users/Admin/Documents/bcg/New folder/integrations_technical_assessment/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor for auth tokens\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('access_token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Response interceptor for token refresh\r\napi.interceptors.response.use(\r\n  response => response,\r\n  async error => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        const response = await axios.post('/auth/refresh', { refresh_token: refreshToken });\r\n        localStorage.setItem('access_token', response.data.access_token);\r\n        return api(originalRequest);\r\n      } catch (err) {\r\n        console.error('Refresh token failed', err);\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        window.location.href = '/login'; // Redirect to login\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// HubSpot OAuth endpoints\r\nexport const hubspotAPI = {\r\n  getAuthUrl: (user_id, org_id) => api.post('/hubspot/authorize', { user_id, org_id }),\r\n  exchangeCode: (code, state) => api.get(`/hubspot/callback?code=${code}&state=${state}`),\r\n  getContacts: () => api.get('/hubspot/contacts'),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACO,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC3BM,QAAQ,IAAIA,QAAQ,EACpB,MAAMC,KAAK,IAAI;EAAA,IAAAC,eAAA;EACb,MAAMC,eAAe,GAAGF,KAAK,CAACN,MAAM;EACpC,IAAI,EAAAO,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,MAAME,QAAQ,GAAG,MAAMhB,KAAK,CAACuB,IAAI,CAAC,eAAe,EAAE;QAAEC,aAAa,EAAEF;MAAa,CAAC,CAAC;MACnFT,YAAY,CAACY,OAAO,CAAC,cAAc,EAAET,QAAQ,CAACU,IAAI,CAACC,YAAY,CAAC;MAChE,OAAO1B,GAAG,CAACkB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEW,GAAG,CAAC;MAC1Cf,YAAY,CAACiB,UAAU,CAAC,cAAc,CAAC;MACvCjB,YAAY,CAACiB,UAAU,CAAC,eAAe,CAAC;MACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAAClB,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMmB,UAAU,GAAG;EACxBC,UAAU,EAAEA,CAACC,OAAO,EAAEC,MAAM,KAAKtC,GAAG,CAACsB,IAAI,CAAC,oBAAoB,EAAE;IAAEe,OAAO;IAAEC;EAAO,CAAC,CAAC;EACpFC,YAAY,EAAEA,CAACC,IAAI,EAAEC,KAAK,KAAKzC,GAAG,CAAC0C,GAAG,CAAC,0BAA0BF,IAAI,UAAUC,KAAK,EAAE,CAAC;EACvFE,WAAW,EAAEA,CAAA,KAAM3C,GAAG,CAAC0C,GAAG,CAAC,mBAAmB;AAChD,CAAC;AAED,eAAe1C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}