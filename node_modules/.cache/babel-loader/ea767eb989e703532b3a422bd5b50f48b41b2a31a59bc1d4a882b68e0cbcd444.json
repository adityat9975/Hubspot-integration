{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\bcg\\\\New folder\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integration-form.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from './context/AuthContext';\nimport { Box, Autocomplete, TextField, Button, CircularProgress, Alert } from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst integrationMapping = {\n  'Notion': NotionIntegration,\n  'Airtable': AirtableIntegration,\n  'HubSpot': HubSpotIntegration\n};\nexport const IntegrationForm = () => {\n  _s();\n  const {\n    hubspotAuth,\n    initiateHubspotAuth,\n    handleHubspotCallback\n  } = useAuth();\n  const [integrationParams, setIntegrationParams] = useState({});\n  const [user, setUser] = useState('TestUser');\n  const [org, setOrg] = useState('TestOrg');\n  const [currType, setCurrType] = useState(null);\n  const CurrIntegration = currType ? integrationMapping[currType] : null;\n\n  // Handle HubSpot callback when component mounts\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const state = params.get('state');\n    if (code && state && currType === 'HubSpot') {\n      handleHubspotCallback(code, state).then(() => {\n        // Clean URL after successful auth\n        window.history.replaceState({}, '', window.location.pathname);\n      });\n    }\n  }, [currType, handleHubspotCallback]);\n  const handleHubSpotConnect = () => {\n    initiateHubspotAuth(user, org);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      sx: {\n        width: '100%',\n        maxWidth: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Organization\",\n        value: org,\n        onChange: e => setOrg(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"integration-type\",\n        options: Object.keys(integrationMapping),\n        sx: {\n          width: '100%',\n          mt: 2\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Integration Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 46\n        }, this),\n        onChange: (e, value) => setCurrType(value),\n        value: currType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), hubspotAuth.error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: hubspotAuth.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), currType === 'HubSpot' && !hubspotAuth.isAuthenticated && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleHubSpotConnect,\n      disabled: hubspotAuth.loading,\n      sx: {\n        mt: 2\n      },\n      children: hubspotAuth.loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this) : 'Connect HubSpot Account'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), CurrIntegration && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CurrIntegration, {\n        user: user,\n        org: org,\n        integrationParams: integrationParams,\n        setIntegrationParams: setIntegrationParams,\n        isAuthenticated: currType === 'HubSpot' ? hubspotAuth.isAuthenticated : true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataForm, {\n        integrationType: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type,\n        credentials: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(IntegrationForm, \"SYZqhOllkAoEQWOOjZxm89M++KU=\", false, function () {\n  return [useAuth];\n});\n_c = IntegrationForm;\nvar _c;\n$RefreshReg$(_c, \"IntegrationForm\");","map":{"version":3,"names":["useState","useEffect","useAuth","Box","Autocomplete","TextField","Button","CircularProgress","Alert","AirtableIntegration","NotionIntegration","HubSpotIntegration","DataForm","jsxDEV","_jsxDEV","integrationMapping","IntegrationForm","_s","hubspotAuth","initiateHubspotAuth","handleHubspotCallback","integrationParams","setIntegrationParams","user","setUser","org","setOrg","currType","setCurrType","CurrIntegration","params","URLSearchParams","window","location","search","code","get","state","then","history","replaceState","pathname","handleHubSpotConnect","display","justifyContent","alignItems","flexDirection","sx","width","children","maxWidth","label","value","onChange","e","target","mt","fileName","_jsxFileName","lineNumber","columnNumber","id","options","Object","keys","renderInput","error","severity","isAuthenticated","variant","onClick","disabled","loading","size","credentials","integrationType","type","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/bcg/New folder/integrations_technical_assessment/frontend/src/integration-form.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from './context/AuthContext';\nimport {\n    Box,\n    Autocomplete,\n    TextField,\n    Button,\n    CircularProgress,\n    Alert\n} from '@mui/material';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { HubSpotIntegration } from './integrations/hubspot';\nimport { DataForm } from './data-form';\n\nconst integrationMapping = {\n    'Notion': NotionIntegration,\n    'Airtable': AirtableIntegration,\n    'HubSpot': HubSpotIntegration,\n};\n\nexport const IntegrationForm = () => {\n    const { hubspotAuth, initiateHubspotAuth, handleHubspotCallback } = useAuth();\n    const [integrationParams, setIntegrationParams] = useState({});\n    const [user, setUser] = useState('TestUser');\n    const [org, setOrg] = useState('TestOrg');\n    const [currType, setCurrType] = useState(null);\n    const CurrIntegration = currType ? integrationMapping[currType] : null;\n\n    // Handle HubSpot callback when component mounts\n    useEffect(() => {\n        const params = new URLSearchParams(window.location.search);\n        const code = params.get('code');\n        const state = params.get('state');\n        \n        if (code && state && currType === 'HubSpot') {\n            handleHubspotCallback(code, state)\n                .then(() => {\n                    // Clean URL after successful auth\n                    window.history.replaceState({}, '', window.location.pathname);\n                });\n        }\n    }, [currType, handleHubspotCallback]);\n\n    const handleHubSpotConnect = () => {\n        initiateHubspotAuth(user, org);\n    };\n\n    return (\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\n            <Box display='flex' flexDirection='column' sx={{ width: '100%', maxWidth: 500 }}>\n                <TextField\n                    label=\"User\"\n                    value={user}\n                    onChange={(e) => setUser(e.target.value)}\n                    sx={{ mt: 2 }}\n                />\n                <TextField\n                    label=\"Organization\"\n                    value={org}\n                    onChange={(e) => setOrg(e.target.value)}\n                    sx={{ mt: 2 }}\n                />\n                <Autocomplete\n                    id=\"integration-type\"\n                    options={Object.keys(integrationMapping)}\n                    sx={{ width: '100%', mt: 2 }}\n                    renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\n                    onChange={(e, value) => setCurrType(value)}\n                    value={currType}\n                />\n                \n                {hubspotAuth.error && (\n                    <Alert severity=\"error\" sx={{ mt: 2 }}>\n                        {hubspotAuth.error}\n                    </Alert>\n                )}\n            </Box>\n\n            {currType === 'HubSpot' && !hubspotAuth.isAuthenticated && (\n                <Button\n                    variant=\"contained\"\n                    onClick={handleHubSpotConnect}\n                    disabled={hubspotAuth.loading}\n                    sx={{ mt: 2 }}\n                >\n                    {hubspotAuth.loading ? (\n                        <CircularProgress size={24} />\n                    ) : (\n                        'Connect HubSpot Account'\n                    )}\n                </Button>\n            )}\n\n            {CurrIntegration && (\n                <Box sx={{ width: '100%', mt: 2 }}>\n                    <CurrIntegration \n                        user={user} \n                        org={org}\n                        integrationParams={integrationParams} \n                        setIntegrationParams={setIntegrationParams} \n                        isAuthenticated={currType === 'HubSpot' ? hubspotAuth.isAuthenticated : true}\n                    />\n                </Box>\n            )}\n\n            {integrationParams?.credentials && (\n                <Box sx={{ mt: 2, width: '100%' }}>\n                    <DataForm \n                        integrationType={integrationParams?.type} \n                        credentials={integrationParams?.credentials} \n                    />\n                </Box>\n            )}\n        </Box>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}