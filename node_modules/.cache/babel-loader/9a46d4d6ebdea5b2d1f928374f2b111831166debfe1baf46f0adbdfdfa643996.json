{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\bcg\\\\New folder\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, CircularProgress, List, ListItem, ListItemText, Typography, Alert, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(!!(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials));\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [hubspotItems, setHubspotItems] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Initialize connection status\n  useEffect(() => {\n    const checkExistingConnection = async () => {\n      if (integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials) {\n        try {\n          var _response$data;\n          const response = await axios.get('http://localhost:8000/integrations/hubspot/credentials', {\n            params: {\n              user_id: user,\n              org_id: org\n            }\n          });\n          setIsConnected(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.connected) || false);\n        } catch (e) {\n          console.error('Connection check failed:', e);\n          setIsConnected(false);\n        }\n      }\n    };\n    checkExistingConnection();\n  }, [user, org, integrationParams]);\n  const handleConnectClick = async () => {\n    try {\n      var _response$data2;\n      setIsConnecting(true);\n      setError(null);\n      const response = await axios.post('http://localhost:8000/integrations/hubspot/authorize', {\n        user_id: user,\n        org_id: org\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.url)) {\n        throw new Error('Authorization URL not received from server');\n      }\n\n      // Store connection attempt in localStorage\n      localStorage.setItem('hubspot_connection', JSON.stringify({\n        user,\n        org,\n        timestamp: Date.now()\n      }));\n\n      // Redirect to HubSpot auth\n      window.location.href = response.data.url;\n    } catch (e) {\n      var _e$response, _e$response$data, _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      setError(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || ((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) || e.message || 'Failed to initiate HubSpot connection');\n      console.error('Connection initiation error:', e);\n    }\n  };\n\n  // Handle OAuth callback\n  useEffect(() => {\n    const completeConnection = async () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const code = urlParams.get('code');\n      const error = urlParams.get('error');\n      if (error) {\n        setError(`HubSpot authorization failed: ${error}`);\n        return;\n      }\n      if (code) {\n        try {\n          var _response$data3;\n          setIsConnecting(true);\n          setError(null);\n\n          // Verify this is the same user who initiated the connection\n          const connectionAttempt = JSON.parse(localStorage.getItem('hubspot_connection') || '{}');\n          if (connectionAttempt.user !== user || connectionAttempt.org !== org) {\n            throw new Error('User mismatch during authorization');\n          }\n          const response = await axios.post('http://localhost:8000/integrations/hubspot/credentials', {\n            user_id: user,\n            org_id: org,\n            code\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (!((_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.access_token)) {\n            throw new Error('Invalid credentials received');\n          }\n          setIsConnected(true);\n          setIntegrationParams(prev => ({\n            ...prev,\n            credentials: response.data,\n            type: 'HubSpot'\n          }));\n\n          // Clean up and redirect\n          localStorage.removeItem('hubspot_connection');\n          navigate('/integrations', {\n            replace: true,\n            state: {\n              hubspotConnected: true\n            }\n          });\n        } catch (e) {\n          var _e$response3, _e$response3$data, _e$response4, _e$response4$data;\n          setError(((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.detail) || ((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message) || e.message || 'Failed to complete HubSpot connection');\n          console.error('Connection completion error:', e);\n        } finally {\n          setIsConnecting(false);\n        }\n      }\n    };\n    completeConnection();\n  }, [navigate, user, org, setIntegrationParams]);\n  const fetchHubSpotItems = async () => {\n    try {\n      var _response$data4;\n      setIsFetching(true);\n      setError(null);\n      const response = await axios.get('http://localhost:8000/integrations/hubspot/items', {\n        params: {\n          user_id: user,\n          org_id: org\n        }\n      });\n      setHubspotItems(((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.items) || []);\n    } catch (e) {\n      var _e$response5, _e$response5$data, _e$response6, _e$response6$data;\n      setError(((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : (_e$response5$data = _e$response5.data) === null || _e$response5$data === void 0 ? void 0 : _e$response5$data.detail) || ((_e$response6 = e.response) === null || _e$response6 === void 0 ? void 0 : (_e$response6$data = _e$response6.data) === null || _e$response6$data === void 0 ? void 0 : _e$response6$data.message) || e.message || 'Failed to fetch HubSpot contacts');\n      console.error('Fetch error:', e);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n  const handleDisconnect = async () => {\n    try {\n      setIsConnecting(true);\n      setError(null);\n      await axios.delete('http://localhost:8000/integrations/hubspot/credentials', {\n        data: {\n          user_id: user,\n          org_id: org\n        },\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setIsConnected(false);\n      setHubspotItems([]);\n      setIntegrationParams(prev => ({\n        ...prev,\n        credentials: null,\n        type: prev.type === 'HubSpot' ? null : prev.type\n      }));\n    } catch (e) {\n      var _e$response7, _e$response7$data, _e$response8, _e$response8$data;\n      setError(((_e$response7 = e.response) === null || _e$response7 === void 0 ? void 0 : (_e$response7$data = _e$response7.data) === null || _e$response7$data === void 0 ? void 0 : _e$response7$data.detail) || ((_e$response8 = e.response) === null || _e$response8 === void 0 ? void 0 : (_e$response8$data = _e$response8.data) === null || _e$response8$data === void 0 ? void 0 : _e$response8$data.message) || e.message || 'Failed to disconnect from HubSpot');\n      console.error('Disconnection error:', e);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2,\n      p: 2,\n      border: '1px solid #ddd',\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"HubSpot Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 2,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: isConnected ? 'success' : 'primary',\n        onClick: isConnected ? handleDisconnect : handleConnectClick,\n        disabled: isConnecting,\n        startIcon: isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 40\n        }, this) : null,\n        children: isConnected ? 'Disconnect HubSpot' : isConnecting ? 'Connecting...' : 'Connect to HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: fetchHubSpotItems,\n        disabled: isFetching,\n        startIcon: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 42\n        }, this) : null,\n        children: isFetching ? 'Fetching...' : 'Fetch Contacts'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"HubSpot Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), hubspotItems.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          maxHeight: 300,\n          overflow: 'auto'\n        },\n        children: hubspotItems.map((item, index) => {\n          var _item$metadata, _item$metadata2;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.name || 'Unnamed Contact',\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [item.description || 'No description', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 49\n                }, this), ((_item$metadata = item.metadata) === null || _item$metadata === void 0 ? void 0 : _item$metadata.company) && `Company: ${item.metadata.company}`, ((_item$metadata2 = item.metadata) === null || _item$metadata2 === void 0 ? void 0 : _item$metadata2.phone) && ` • Phone: ${item.metadata.phone}`]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: isFetching ? 'Loading contacts...' : 'No contacts found. Click \"Fetch Contacts\" to load data.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"oux636WYGZ4ix/NQuq8frvpcrGI=\", false, function () {\n  return [useNavigate];\n});\n_c = HubSpotIntegration;\nexport default HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Box","Button","CircularProgress","List","ListItem","ListItemText","Typography","Alert","Divider","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","credentials","isConnecting","setIsConnecting","hubspotItems","setHubspotItems","isFetching","setIsFetching","error","setError","navigate","checkExistingConnection","_response$data","response","get","params","user_id","org_id","data","connected","e","console","handleConnectClick","_response$data2","post","headers","url","Error","localStorage","setItem","JSON","stringify","timestamp","Date","now","window","location","href","_e$response","_e$response$data","_e$response2","_e$response2$data","detail","message","completeConnection","urlParams","URLSearchParams","search","code","_response$data3","connectionAttempt","parse","getItem","access_token","prev","type","removeItem","replace","state","hubspotConnected","_e$response3","_e$response3$data","_e$response4","_e$response4$data","fetchHubSpotItems","_response$data4","items","_e$response5","_e$response5$data","_e$response6","_e$response6$data","handleDisconnect","delete","_e$response7","_e$response7$data","_e$response8","_e$response8$data","sx","mt","p","border","borderRadius","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onClose","display","alignItems","gap","color","onClick","disabled","startIcon","size","my","length","dense","maxHeight","overflow","map","item","index","_item$metadata","_item$metadata2","divider","primary","name","secondary","description","metadata","company","phone","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/bcg/New folder/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n    Alert,\r\n    Divider\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(!!integrationParams?.credentials);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n    const [hubspotItems, setHubspotItems] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // Initialize connection status\r\n    useEffect(() => {\r\n        const checkExistingConnection = async () => {\r\n            if (integrationParams?.credentials) {\r\n                try {\r\n                    const response = await axios.get(\r\n                        'http://localhost:8000/integrations/hubspot/credentials',\r\n                        {\r\n                            params: { user_id: user, org_id: org }\r\n                        }\r\n                    );\r\n                    setIsConnected(response.data?.connected || false);\r\n                } catch (e) {\r\n                    console.error('Connection check failed:', e);\r\n                    setIsConnected(false);\r\n                }\r\n            }\r\n        };\r\n        checkExistingConnection();\r\n    }, [user, org, integrationParams]);\r\n\r\n    const handleConnectClick = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            setError(null);\r\n            \r\n            const response = await axios.post(\r\n                'http://localhost:8000/integrations/hubspot/authorize',\r\n                { user_id: user, org_id: org },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (!response.data?.url) {\r\n                throw new Error('Authorization URL not received from server');\r\n            }\r\n\r\n            // Store connection attempt in localStorage\r\n            localStorage.setItem('hubspot_connection', JSON.stringify({\r\n                user,\r\n                org,\r\n                timestamp: Date.now()\r\n            }));\r\n\r\n            // Redirect to HubSpot auth\r\n            window.location.href = response.data.url;\r\n\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            setError(e.response?.data?.detail || \r\n                   e.response?.data?.message || \r\n                   e.message || \r\n                   'Failed to initiate HubSpot connection');\r\n            console.error('Connection initiation error:', e);\r\n        }\r\n    };\r\n\r\n    // Handle OAuth callback\r\n    useEffect(() => {\r\n        const completeConnection = async () => {\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const code = urlParams.get('code');\r\n            const error = urlParams.get('error');\r\n\r\n            if (error) {\r\n                setError(`HubSpot authorization failed: ${error}`);\r\n                return;\r\n            }\r\n\r\n            if (code) {\r\n                try {\r\n                    setIsConnecting(true);\r\n                    setError(null);\r\n                    \r\n                    // Verify this is the same user who initiated the connection\r\n                    const connectionAttempt = JSON.parse(\r\n                        localStorage.getItem('hubspot_connection') || '{}'\r\n                    );\r\n                    \r\n                    if (connectionAttempt.user !== user || connectionAttempt.org !== org) {\r\n                        throw new Error('User mismatch during authorization');\r\n                    }\r\n\r\n                    const response = await axios.post(\r\n                        'http://localhost:8000/integrations/hubspot/credentials',\r\n                        { \r\n                            user_id: user, \r\n                            org_id: org,\r\n                            code \r\n                        },\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    if (!response.data?.access_token) {\r\n                        throw new Error('Invalid credentials received');\r\n                    }\r\n\r\n                    setIsConnected(true);\r\n                    setIntegrationParams(prev => ({\r\n                        ...prev,\r\n                        credentials: response.data,\r\n                        type: 'HubSpot'\r\n                    }));\r\n\r\n                    // Clean up and redirect\r\n                    localStorage.removeItem('hubspot_connection');\r\n                    navigate('/integrations', { \r\n                        replace: true,\r\n                        state: { hubspotConnected: true } \r\n                    });\r\n\r\n                } catch (e) {\r\n                    setError(e.response?.data?.detail || \r\n                           e.response?.data?.message || \r\n                           e.message || \r\n                           'Failed to complete HubSpot connection');\r\n                    console.error('Connection completion error:', e);\r\n                } finally {\r\n                    setIsConnecting(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        completeConnection();\r\n    }, [navigate, user, org, setIntegrationParams]);\r\n\r\n    const fetchHubSpotItems = async () => {\r\n        try {\r\n            setIsFetching(true);\r\n            setError(null);\r\n            \r\n            const response = await axios.get(\r\n                'http://localhost:8000/integrations/hubspot/items',\r\n                {\r\n                    params: { user_id: user, org_id: org }\r\n                }\r\n            );\r\n\r\n            setHubspotItems(response.data?.items || []);\r\n        } catch (e) {\r\n            setError(e.response?.data?.detail || \r\n                   e.response?.data?.message || \r\n                   e.message || \r\n                   'Failed to fetch HubSpot contacts');\r\n            console.error('Fetch error:', e);\r\n        } finally {\r\n            setIsFetching(false);\r\n        }\r\n    };\r\n\r\n    const handleDisconnect = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            setError(null);\r\n            \r\n            await axios.delete(\r\n                'http://localhost:8000/integrations/hubspot/credentials',\r\n                {\r\n                    data: { user_id: user, org_id: org },\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n\r\n            setIsConnected(false);\r\n            setHubspotItems([]);\r\n            setIntegrationParams(prev => ({\r\n                ...prev,\r\n                credentials: null,\r\n                type: prev.type === 'HubSpot' ? null : prev.type\r\n            }));\r\n        } catch (e) {\r\n            setError(e.response?.data?.detail || \r\n                   e.response?.data?.message || \r\n                   e.message || \r\n                   'Failed to disconnect from HubSpot');\r\n            console.error('Disconnection error:', e);\r\n        } finally {\r\n            setIsConnecting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ mt: 2, p: 2, border: '1px solid #ddd', borderRadius: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                HubSpot Integration\r\n            </Typography>\r\n            \r\n            {error && (\r\n                <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2} sx={{ mb: 3 }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={isConnected ? 'success' : 'primary'}\r\n                    onClick={isConnected ? handleDisconnect : handleConnectClick}\r\n                    disabled={isConnecting}\r\n                    startIcon={\r\n                        isConnecting ? <CircularProgress size={20} color=\"inherit\" /> : null\r\n                    }\r\n                >\r\n                    {isConnected \r\n                        ? 'Disconnect HubSpot' \r\n                        : isConnecting \r\n                            ? 'Connecting...' \r\n                            : 'Connect to HubSpot'}\r\n                </Button>\r\n                \r\n                {isConnected && (\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={fetchHubSpotItems}\r\n                        disabled={isFetching}\r\n                        startIcon={\r\n                            isFetching ? <CircularProgress size={20} /> : null\r\n                        }\r\n                    >\r\n                        {isFetching ? 'Fetching...' : 'Fetch Contacts'}\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n\r\n            {isConnected && (\r\n                <>\r\n                    <Divider sx={{ my: 2 }} />\r\n                    \r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                        HubSpot Data\r\n                    </Typography>\r\n                    \r\n                    {hubspotItems.length > 0 ? (\r\n                        <List dense sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n                            {hubspotItems.map((item, index) => (\r\n                                <ListItem key={index} divider>\r\n                                    <ListItemText\r\n                                        primary={item.name || 'Unnamed Contact'}\r\n                                        secondary={\r\n                                            <>\r\n                                                {item.description || 'No description'}\r\n                                                <br />\r\n                                                {item.metadata?.company && `Company: ${item.metadata.company}`}\r\n                                                {item.metadata?.phone && ` • Phone: ${item.metadata.phone}`}\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) : (\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {isFetching \r\n                                ? 'Loading contacts...' \r\n                                : 'No contacts found. Click \"Fetch Contacts\" to load data.'}\r\n                        </Typography>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default HubSpotIntegration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}